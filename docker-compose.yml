version: "3"

volumes:
  db-data: {}

services:
  postgres:
    image: postgres:12.18
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_USER: mpa
      POSTGRES_PASSWORD: development
    ports:
      - "5432:5432"
    networks:
      - mpa-net
    volumes:
      - db-data:/var/lib/postgresql/data

  web:
    image: web
    build: ./server/Dockerfile
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      DATABASE: postgres
      POSTGRES_HOST: postgres
      POSTGRES_USER: mpa
      POSTGRES_PASSWORD: development
      LOG_LEVEL: INFO
    command: bash -c "tail -f /dev/null"
    #command: bash -c "python manage.py makemigrations app && python manage.py migrate && python manage.py load_sample_data && python manage.py runserver 0.0.0.0:8000"
    #command: bash -c "python manage.py makemigrations app && python manage.py migrate && python manage.py load_sample_data && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - mpa-net
    volumes:
      - db-data:/var/lib/postgresql/data

# NGINX For SSL Termination or Load Balancing
#  nginx:
#    image: nginx:1.16
#    deploy:
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#    ports:
#        - "443:443"
#    depends_on:
#      - webserver
#    networks:
#      - mpa-net
#    volumes:
#      - ${REPO_ROOT}/deploy/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
#      - ${REPO_ROOT}/deploy/nginx/web.crt:/etc/nginx/web.crt
#      - ${REPO_ROOT}/deploy/nginx/web.key:/etc/nginx/web.key

networks:
  mpa-net:
